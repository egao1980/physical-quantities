(in-package :pq)

(defun define-si-units (&key clear-existing-units)
  (when clear-existing-units
    (clear-units))
  (define-unit-prefix yocto -24 :abbrev y)
  (define-unit-prefix zepto -21 :abbrev z)
  (define-unit-prefix atto  -18 :abbrev a)
  (define-unit-prefix femto -15 :abbrev f)
  (define-unit-prefix pico -12 :abbrev p)
  (define-unit-prefix nano -9 :abbrev n)
  (define-unit-prefix micro -6 :abbrev u)
  (define-unit-prefix milli -3 :abbrev m)
  (define-unit-prefix centi -2 :abbrev c)
  (define-unit-prefix deci -1 :abbrev d)
  (define-unit-prefix deca 1 :abbrev da)
  (define-unit-prefix hecto 2 :abbrev h)
  (define-unit-prefix kilo 3 :abbrev k)
  (define-unit-prefix mega 6 :abbrev meg)
  (define-unit-prefix giga 9 :abbrev g)
  (define-unit-prefix tera 12 :abbrev t)
  (define-unit-prefix peta 15 :abbrev pet)
  (define-unit-prefix exa 18 :abbrev e)
  (define-unit-prefix zetta 21 :abbrev zet)
  (define-unit-prefix yotta 24 :abbrev yot)
  (define-unit-prefix kibi 1 :abbrev ki :base 1024)
  (define-unit-prefix mebi 2 :abbrev mi :base 1024)
  (define-unit-prefix gibi 3 :abbrev gi :base 1024)
  (define-unit-prefix tebi 4 :abbrev ti :base 1024)
  (define-unit-prefix pebi 5 :abbrev pi :base 1024)
  (define-unit-prefix exbi 6 :abbrev ei :base 1024)
  (define-unit-prefix zebi 7 :abbrev zi :base 1024)
  (define-unit-prefix yobi 8 :abbrev yi :base 1024)
  ;; SI base units
  (define-unit metre :abbrev m :alias meter :prefix-test (prefix-range 10 nil 3))
  (define-unit gram :abbrev g :prefix-test (prefix-and (prefix-base 10 3) (prefix-range 10 nil 3)))
  (define-unit second :abbrev s :prefix-test (prefix-range 10 nil -3))
  (define-unit ampere :abbrev a :prefix-test (prefix-and (prefix-base 10 3) (prefix-range 10 nil 3)))
  (define-unit kelvin :abbrev k :prefix-test (prefix-base 10 3))
  (define-unit mole :abbrev mol :prefix-test (prefix-base 10))
  (define-unit candela :abbrev cd :prefix-test (prefix-base 10 3))
  ;; Named units derived from SI base units
  (define-unit radian :def ((/ 180 pi) degree) :abbrev rad :prefix-test (prefix-range 10 nil -3))
  (define-unit steradian :def (1) :abbrev sr :prefix-test (prefix-range 10 nil -3))
  (define-unit hertz :def (1 / second) :abbrev hz :prefix-test (prefix-base 10 3))
  (define-unit newton :def (1 kilogram metre / second ^ 2) :abbrev n :prefix-test (prefix-base 10 3))
  (define-unit pascal :def (1 newton / metre ^ 2) :prefix-test (prefix-base 10 3))
  (define-unit joule :def (1 newton metre) :abbrev j :prefix-test (prefix-base 10 3))
  (define-unit watt :def (1 joule / second) :abbrev w :prefix-test (prefix-base 10 3))
  (define-unit coulomb :def (1 ampere second) :abbrev c :prefix-test (prefix-base 10 3))
  (define-unit volt :def (1 watt / ampere) :abbrev v :prefix-test (prefix-and (prefix-base 10 3) (prefix-range 10 nil 15)))
  (define-unit farad :def (1 coulomb / volt) :abbrev f :prefix-test (prefix-and (prefix-base 10 3) (prefix-range 10 nil 3)))
  (define-unit ohm :def (1 volt / ampere) :prefix-test (prefix-base 10 3))
  (define-unit siemens :def (1 ampere / volt) :prefix-test (prefix-base 10 3))
  (define-unit weber :def (1 volt second) :abbrev wb :prefix-test (prefix-base 10 3))
  (define-unit tesla :def (1 weber / metre ^ 2) :abbrev t :prefix-test (prefix-base 10 3))
  (define-unit henry :def (1 weber / ampere) :prefix-test (prefix-base 10 3))
  (define-unit celsius :def (1 kelvin) :prefix-test (prefix-base 10 3))
  (define-unit lumen :def (1 candela steradian) :abbrev lm :prefix-test (prefix-base 10 3))
  (define-unit lux :def (1 lumen / metre ^ 2) :abbrev lx :prefix-test (prefix-base 10 3))
  (define-unit becquerel :def (1 / second) :abbrev bq :prefix-test (prefix-base 10 3))
  (define-unit gray :def (1 joule / kilogram) :abbrev gy :prefix-test (prefix-base 10 3))
  (define-unit sievert :def (1 joule / kilogram) :abbrev sv :prefix-test (prefix-base 10 3))
  (define-unit katal :def (1 mol / second) :abbrev kat :prefix-test (prefix-base 10 3))
  (define-unit byte :def (1) :abbrev b :prefix-test (prefix-or (prefix-base 1024) (prefix-range 10 3 nil)))
  ;; Non-SI units accepted for use with SI
  (define-unit minute :def (60 second) :abbrev min :prefix-test (constantly nil))
  (define-unit hour :def (60 minute) :abbrev h :prefix-test (constantly nil))
  (define-unit day :def (24 hour) :abbrev d :prefix-test (constantly nil))
  (define-unit degree :def (1) :abbrev deg :prefix-test (prefix-range 10 nil -3))
  (define-unit hectare :def (10000 metre ^ 2) :abbrev ha :prefix-test (constantly nil))
  (define-unit litre :def (1 decimetre ^ 3) :abbrev l :prefix-test (prefix-range 10 nil 2))
  (define-unit tonne :def (1000 kilogram) :prefix-test (prefix-range 10 3 nil))
  (define-unit au :def (149597870700 metre) :prefix-test (constantly nil))
  (define-unit electron :def (1.6021765314d-19 coulomb) :prefix-test (prefix-range 10 3 nil))
  (define-unit electronvolt :def (1 electron volt) :abbrev ev :prefix-test (prefix-base 10 3))
  (define-unit dalton :def (1.6605388628e-27 kilogram) :abbrev (u da) :prefix-test (constantly nil)))
(export 'define-si-units)
